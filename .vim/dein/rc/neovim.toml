[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
on_event = "InsertEnter"
depends = 'context_filetype.vim'
hook_source = '''
	call deoplete#custom#option({
	\ 'smart_case': v:true
	\ })
	let g:deoplete#enable_at_startup = 1
	let g:deoplete#enable_ignore_case = 1
'''
build = ':UpdateRemotePlugins'

# [[plugins]]
# repo = 'sebastianmarkow/deoplete-rust'
# depends = ['deoplete.nvim']
# on_ft = 'rust'
# hook_source = '''
# 	let g:deoplete#sources#rust#racer_binary='$HOME/.cargo/bin/racer'
# 	let g:deoplete#sources#rust#rust_source_path='$HOME/rust-src/rust/src'
# 	let g:deoplete#sources#rust#show_duplicates=1
# '''

[[plugins]]
repo = 'shougo/neco-vim'
depends = ['deoplete.nvim']
on_ft = 'vim'

[[plugins]]
repo = 'fszymanski/deoplete-emoji'
depends = ['deoplete.nvim']
on_ft = ['text', 'markdown']

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_source = '''
	set hidden
'''
hook_post_source = '''
	nnoremap gd :call LanguageClient#textDocument_definition()<CR>
	nnoremap <C-t> :call LanguageClient#textDocument_rename()<CR>
	" depend on go-langserver, install this:
	" go get -u github.com/sourcegraph/go-langserver
	let g:LanguageClient_serverCommands = {
		\ 'go': [$GOPATH.'/bin/go-langserver','-format-tool','gofmt','-lint-tool','golint'],
		\ 'rust': ['$HOME/.cargo/bin/rustup', 'run', 'stable', 'rls']
        \ }
'''
[[plugins]]
repo = 'junegunn/fzf'

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
	:command! Tree Defx -split=vertical -winwidth=50 -direction=topleft -columns=git:mark:filename:type `expand('%:p:h')` -search=`expand('%:p')`
	:command! Dex Defx `expand('%:p:h')` -search=`expand('%:p')`
'''
hook_source = '''
	autocmd FileType defx call s:defx_my_settings()
	function! s:defx_my_settings() abort
	  " Define mappings
	  nnoremap <silent><buffer><expr> <CR>
	  \ defx#do_action('open')
	  nnoremap <silent><buffer><expr> c
	  \ defx#do_action('copy')
	  nnoremap <silent><buffer><expr> m
	  \ defx#do_action('move')
	  nnoremap <silent><buffer><expr> p
	  \ defx#do_action('paste')
	  nnoremap <silent><buffer><expr> l
	  \ defx#do_action('open')
	  nnoremap <silent><buffer><expr> E
	  \ defx#do_action('open', 'vsplit')
	  nnoremap <silent><buffer><expr> P
	  \ defx#do_action('open', 'pedit')
	  nnoremap <silent><buffer><expr> K
	  \ defx#do_action('new_directory')
	  nnoremap <silent><buffer><expr> N
	  \ defx#do_action('new_file')
	  nnoremap <silent><buffer><expr> d
	  \ defx#do_action('remove')
	  nnoremap <silent><buffer><expr> r
	  \ defx#do_action('rename')
	  nnoremap <silent><buffer><expr> x
	  \ defx#do_action('execute_system')
	  nnoremap <silent><buffer><expr> yy
	  \ defx#do_action('yank_path')
	  nnoremap <silent><buffer><expr> .
	  \ defx#do_action('toggle_ignored_files')
	  nnoremap <silent><buffer><expr> h
	  \ defx#do_action('cd', ['..'])
	  nnoremap <silent><buffer><expr> ~
	  \ defx#do_action('cd')
	  nnoremap <silent><buffer><expr> q
	  \ defx#do_action('quit')
	  nnoremap <silent><buffer><expr> <Space>
	  \ defx#do_action('toggle_select') . 'j'
	  nnoremap <silent><buffer><expr> *
	  \ defx#do_action('toggle_select_all')
	  nnoremap <silent><buffer><expr> j
	  \ line('.') == line('$') ? 'gg' : 'j'
	  nnoremap <silent><buffer><expr> k
	  \ line('.') == 1 ? 'G' : 'k'
	  nnoremap <silent><buffer><expr> <C-l>
	  \ defx#do_action('redraw')
	  nnoremap <silent><buffer><expr> <C-g>
	  \ defx#do_action('print')
	  nnoremap <silent><buffer><expr> cd
	  \ defx#do_action('change_vim_cwd')
	endfunction
'''

[[plugins]]
repo = 'kristijanhusak/defx-git'
depends = 'defx.nvim'
